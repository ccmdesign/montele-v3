@layer form-custom {
  .form-tab {
  }

  .form-panel {
    --_stack-space: var(--space-m-l);
    padding-bottom: var(--space-m-l);
    border: 0;
    border-bottom: 1px solid #000;
  }

  .form-panel > * + * {
    --_stack-space: var(--space-s-m);
  }

  .form-field {
    --_form-field-message-hsl: var(--base-hsl);

    * {
      transition: all 0.2s ease;
    }
  }

  .form-field__message {
    display: none;
  }

  /* Esse seletor mostra utiliza 2 condições para mostrar a mensagem de erro:
     - o usuário tira o focus do input
     - o input tem o atributo user-invalid
  */

  .form-field:not(:has(:focus)):has(*:user-invalid) {
    --_form-field-message-rgb: var(--red-rgb);

    .form-field__message {
      display: block;
    }
  }

  .form-field {
    display: grid;
    gap: var(--space-2xs);
    align-items: center;
    break-inside: avoid;

    & + & {
      margin-block-start: var(--space-s);
    }
  }

  /* Sets the grid for the base form-field layout */
  .form-field {
    grid-template-columns: 1fr 2fr auto;
    grid-template-rows: auto auto;
    grid-template-areas:
      "label input info"
      ". message .";
  }

  .form-field__label {
    grid-area: label;
  }

  .form-field__input {
    grid-area: input;
  }

  .form-field__info {
    grid-area: info;
  }

  .form-field__message {
    grid-area: message;
  }

  .form-field__message {
    font-size: var(--size--1);
    padding: var(--space-xs) var(--space-s);
    margin: 0;
    background-color: rgba(var(--_form-field-message-rgb), 0.05);
    border-left: 2px solid rgba(var(--_form-field-message-rgb), 1);
  }

  /* Sets the grid for the form-fields that do have a textarea inside  */
  .form-field:has(textarea),
  .form-field:has(input[type="checkbox"]),
  .form-field:has(input[type="radio"]) {
    grid-template-columns: 1fr auto;
    grid-template-areas:
      "label info"
      "input input"
      "message message";

    label {
      text-align: left;
    }

    textarea {
      resize: vertical;
    }
  }

  .form-field:has(input[type="checkbox"]),
  .form-field:has(input[type="radio"]) {
    label {
      padding: var(--space-2xs) var(--space-xs);
    }

    .form-field__input > * + * {
      margin-block-start: var(--space-3xs);
    }

    .form-field__label {
      text-align: left;
      margin-left: calc(1rem + var(--space-2xs));

      .icon {
        line-height: 100%;
        vertical-align: middle;
      }
    }

    label:has(input[type="checkbox"]),
    label:has(input[type="radio"]) {
      display: flex;
      align-items: center;
      gap: var(--space-2xs);

      input[type="checkbox"],
      input[type="radio"] {
        display: none;
      }

      &:before {
        font-size: 2rem;
        color: var(--_input-color);
        opacity: 0.4;
        font-family: var(--icon-font);
        font-variation-settings: "FILL" 0, "wght" 300, "GRAD" 0, "opsz" 24;
      }

      &:has(:checked):before {
        opacity: 1;
      }
    }

    label:has(input[type="checkbox"]):before {
      content: "check_box_outline_blank";
    }
    label:has(input[type="checkbox"]):has(:checked):before {
      content: "check_box";
    }
    label:has(input[type="radio"]):before {
      content: "radio_button_unchecked";
    }
    label:has(input[type="radio"]):has(:checked):before {
      content: "radio_button_checked";
    }
  }

  .form-field--fancy {
    > label {
      background-color: var(--_input-background-color);
      border-radius: var(--border-radius-s);
      color: var(--_input-color);
      transition: all 0.2s ease;
      font-weight: 200;
    }

    > label:has(:checked) {
      --_input-background-color: var(--success-color-10-tint);
      --_input-color: var(--success-color);
      font-weight: 400;
    }
  }

  .form-group,
  .form-field__input.form-group {
    display: inline-flex;
    position: relative;
    align-items: center;
    gap: 0;

    & > * {
      flex: 1;
    }
  }

  .form-group input[type="submit"],
  .form-group button,
  .form-group .button {
    flex: 0;
  }

  .form-group :first-child {
    border-radius: var(--_input-border-radius) 0 0 var(--_input-border-radius) !important;
  }

  .form-group :last-child {
    border-radius: 0 var(--_input-border-radius) var(--_input-border-radius) 0 !important;
  }

  .form-group {
    label:before {
      display: none;
    }

    > * {
      margin-top: 0 !important;
      border-radius: 0 !important;
    }

    > :not(:first-child) {
      margin-left: calc(var(--_input-border-width) * -1);
    }
  }

  .form-field__info {
    cursor: help;
    opacity: 0.3;
    color: var(--blue-color);
    line-height: 1;

    &:hover {
      opacity: 1;
    }
  }

  .form-field__info:not([title]),
  .form-field__info[title=""] {
    visibility: hidden;
  }

  .form-field__label {
    text-align: right;
    padding-inline: var(--_input-padding-inline);
  }

  /* Container Query for the Form width */
  .form {
    container-type: inline-size;
    container-name: form;
  }

  @container form (max-width: 500px) {
    .form-field {
      grid-template-columns: 1fr auto;
      grid-template-rows: auto auto auto;
      gap: var(--space-xs);
      grid-template-areas:
        "label info"
        "input input"
        "message message";

      & + & {
        margin-block-start: var(--space-m);
      }
    }

    .form-field__label {
      text-align: left;
      padding-inline: var(--_input-padding-inline);
    }
  }
}
