table {
  border-collapse: collapse;
  border-spacing: 0;
  empty-cells: show;
  border: 0;
  width: 100%;

  th,
  td {
    text-align: left;
    border-bottom: 1px solid var(--base-color-20-tint);
    font-size: var(--size-0);
    padding-inline: var(--space-3xs-2xs);
  }

  td {
    padding-block: var(--space-3xs-2xs);
    
    color: var(--_row-color, var(--base-color));
  }

  td:first-child,
  td:last-child {
    padding-left: var(--space-xs-s);
  }

  th * {
    font-weight: 400;
  }

  a {
    color: var(--_row-color, var(--primary-color));
    /* color: var(--primary-color); */
  }

  a:empty ~ br,
  a:empty {
    display: none;
  }
}

/* Esse é um PoC dos container queries */
/* Estamos usando o .table-wrapper pq o comportamento da tabela é de manter a largura fixa,
   e gerar um scroll horizontal. 
   Estou usando os nth-child por enquanto. A ideia é criar um sistema de prioridades para as colunas
   onde os developers poderão ter um controle granular de quais colunas serão exibidas em determinados
   tamanhos da tabela. 
   [data-priority="1"] { display: none; }
   [data-priority="2"] { display: none; }
   [data-priority="3"] { display: none; }
   [data-priority="4"] { display: none; }
   [data-priority="5"] { display: none; }
   
*/
.table-wrapper {
  container-type: inline-size;
}

/* @container (max-width: 900px) {
  .table :nth-child(4) {
    display: none;
  }
}
@container (max-width: 800px) {
  .table :nth-child(5) {
    display: none;
  }
}
@container (max-width: 700px) {
  .table :nth-child(7) {
    display: none;
  }
}
@container (max-width: 600px) {
  .table :nth-child(8) {
    display: none;
  }
}
@container (max-width: 500px) {
  .table :nth-child(9) {
    display: none;
  }
} */

/* Atualiza a td quando temos um .semaforo dentro */
td:has(.semaforo) {
  position: relative;
}

.table {
  tr[data-status] {
    --_row-color: var(--_row-background-color);
    --_row-background-color: var(--base-color);

    background-color: color-mix(in srgb, var(--_row-background-color, var(--_row-color)) 10%, var(--white-color));
  }


  tr[data-status="bom"] {
    --_row-background-color: var(--green-color);
  }
  
  tr[data-status="ruim"] {
    * {font-weight: 400;}
    --_row-background-color: var(--red-color);
  }
  tr[data-status="atencao"] {
    --_row-background-color: var(--yellow-color);
    --_row-color: var(--yellow-color-70-shade);
  }
}

