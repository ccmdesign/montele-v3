input::file-selector-button,
.button {
  /* Defining Variables */
  --_button-font-family: var(--body-font);
  --_button-letter-spacing: 0.1px;
}

/* 
  This section contains the css rules for the button system. 
  Most of the visual configurations can be made through the variables. (Lines 13-21)
  Many of these configurations have fallbacks values. 
*/

input::file-selector-button,
.button {
  /* Required Values */
  --_button-hsl: var(--base-hsl);
  --_button-text-hsl: var(--base-hsl);

  --_button-color: hsla(var(--_button-hsl), 1);
  --_button-text-color: hsla(var(--_button-text-hsl), 1);
  --_button-padding-block: var(--size--1);
  --_button-padding-inline: var(--size-0);

  /* Optional Values */
  --_button-border-radius: var(--border-radius-s); /* Fallback to 0 */
  --_button-border-color: var(--_button-color); /* Fallback to 1px */
  --_button-border-width: 2px; /* Fallback to 1px */
  --_button-border-style: var(--base-border-style, solid); /* Fallback to solid */
  --_button-font-weight: var(--font-weight, 400); /* Fallback to 400 */
  --_button-font-size: var(--ui-font-size);
  --_button-icon-color: var(--_button-text-color);

  --_button-font-family: var(--body-font);
  --_button-letter-spacing: 0.1px;
}

input::file-selector-button,
.button {
  /* Structure */
  display: inline-block;
  zoom: 1;
  line-height: 1;
  white-space: nowrap;
  vertical-align: middle;
  text-align: center;
  cursor: pointer;
  -webkit-user-drag: none;
  user-select: none;
  box-sizing: border-box;
  font-size: var(--_button-font-size);
  text-decoration: none;
  align-self: self-start;
  justify-self: flex-start;
  font-family: var(--_button-font-family, sans-serif); /* Fallback to sans-serif */
  font-weight: var(--_button-font-weight, 400);
  letter-spacing: var(--_button-letter-spacing);
}

.button:focus {
  outline: 0;
}

/* Firefox: Get rid of the inner focus border */
.button::-moz-focus-inner {
  padding: 0;
  border: 0;
}

.button[disabled],
.button[disabled]:hover,
.button[disabled]:focus,
.button[disabled]:active {
  filter: alpha(opacity=40);
  opacity: 0.4;
  cursor: not-allowed;
  box-shadow: none;
  pointer-events: none;
}

.button[hidden] {
  display: none;
}

.button[unstyled] {
  background-color: transparent;
  border-color: transparent;
}

.button[data-full-width="true"] {
  align-self: stretch;
  justify-self: stretch;
  width: 100%;
}

.button:not([unstyled]) {
  box-shadow: var(--_button-box-shadow);
}

.button[data-color="base"] {
  --_button-hsl: var(--base-hsl);
  --_button-text-color: var(--base-color);
}

.button[data-color="primary"] {
  --_button-hsl: var(--primary-hsl);
  --_button-text-color: var(--primary-color);
}

.button[data-color="secondary"] {
  --_button-hsl: var(--secondary-hsl);
  --_button-text-color: var(--secondary-color);
}

.button[data-color="accent"] {
  --_button-hsl: var(--accent-hsl);
  --_button-text-color: var(--accent-color);
}

.button[data-color="white"] {
  --_button-hsl: var(--white-hsl);
  --_button-text-color: var(--white-color);
}

.button[data-color="success"] {
  --_button-hsl: var(--success-hsl);
  --_button-text-color: var(--success-color);
}

.button[data-color="error"],
.button[data-color="cancel"],
.button[data-color="fail"] {
  --_button-hsl: var(--red-hsl);
  --_button-text-color: var(--red-color);
}

.button[data-color="warning"],
.button[color="warning"] {
  --_button-hsl: var(--yellow-hsl);
  --_button-text-color: var(--yellow-color);
}

.button[data-size="s"],
.button[size="s"] {
  --_button-padding-block: var(--size--2);
  --_button-padding-inline: var(--size--1);
  --_button-font-size: 75%;
}

.button[data-size="l"],
.button[size="l"] {
  --_button-padding-block: var(--size-2);
  --_button-padding-inline: var(--size-3);
  --_button-font-size: 120%;
}

.button[data-size="xl"],
.button[size="xl"] {
  --_button-padding-block: var(--size-0);
  --_button-padding-inline: var(--size-2);
  --_button-font-size: 150%;
}

.button[data-size="full-width"] {
  width: 100%;
}

input::file-selector-button,
.button {
  color: var(--_button-text-color);
  background-color: transparent; /*This might be an issue*/

  padding: var(--_button-padding-block) var(--_button-padding-inline);

  border-radius: var(--_button-border-radius, 0);
  border-width: var(--_button-border-width, 1px);
  border-style: var(--_button-border-style, solid);
  border-color: var(--_button-border-color);

  font-family: var(--_button-font-family);
  font-weight: var(--_button-font-weight, 400);
  font-size: var(--_button-font-size, 100%);
}

input::file-selector-button:hover,
.button:hover {
  background-image: linear-gradient(hsla(var(--_button-hsl), 0.05), hsla(var(--_button-hsl), 0.05));
}

input::file-selector-button:active,
.button:active {
  background-image: linear-gradient(hsla(var(--_button-hsl), 0.15), hsla(var(--_button-hsl), 0.15));
  border-color: hsla(var(--_button-color), 1);
}

.button[data-visual="primary"],
.button[visual="primary"],
/* This makes the checkbox checked look like the primary button */
.button:has(:checked) {
  color: white;
  border-width: var(--_button-border-width, 0);
  border-style: var(--_button-border-style, solid);
  border-color: hsla(var(--_button-hsl), 1);
  background-color: hsla(var(--_button-hsl), 1);
}

.button[data-visual="primary"]:hover,
.button[data-visual="primary"]:focus,
.button[visual="primary"]:hover,
.button[visual="primary"]:focus {
  background-image: linear-gradient(hsla(0, 0%, 0%, 0.15), hsla(0, 0%, 0%, 0.25));
}

.button[data-visual="secondary"],
.button[visual="secondary"] {
  background-color: transparent;
  color: var(--_button-text-color);
  border-width: var(--_button-border-width, 1px);
  border-style: var(--_button-border-style, solid);
  border-color: hsla(var(--_button-hsl), 1);
}

.button[data-visual="secondary"]:hover,
.button[data-visual="secondary"]:focus,
.button[visual="secondary"]:hover,
.button[visual="secondary"]:focus {
  background-image: linear-gradient(hsla(var(--_button-hsl), 0.1), hsla(var(--_button-hsl), 0.1));
}

.button[data-visual="unstyled"],
.button[visual="unstyled"] {
  color: hsla(var(--_button-hsl), 1);
  border-width: var(--_button-border-width, 0);
  border-style: var(--_button-border-style, solid);
  border-color: transparent;
}

.button[data-icon],
.button[data-icon-before],
.button[data-icon-after] {
  display: inline-flex;
  align-items: center;
  justify-content: center;

  &:before,
  &:after {
    line-height: 1; /* this tweaks the line-height of buttons with icons the button height consistent with the other buttons  */
  }
}

.button[data-icon]:before {
  content: attr(data-icon);
}

.button[data-icon-before]:before {
  content: attr(data-icon-before);
}
.button[data-icon-after]:after {
  content: attr(data-icon-after);
}

.button[data-icon]:before,
.button[data-icon-before]:before,
.button[data-icon-after]:after {
  font-family: var(--icon-font);
  font-weight: normal;
  font-style: normal;
  font-size: calc(var(--_button-font-size) * 1.5);
  display: inline-block;
  text-transform: none;
  letter-spacing: normal;
  word-wrap: normal;
  white-space: nowrap;
  direction: ltr;
  color: var(--_button-icon-color);

  /* Support for all WebKit browsers. */
  -webkit-font-smoothing: antialiased;
  /* Support for Safari and Chrome. */
  text-rendering: optimizeLegibility;

  /* Support for Firefox. */
  -moz-osx-font-smoothing: grayscale;

  /* Support for IE. */
  font-feature-settings: "liga";
}

.button[data-icon-before]:before,
.button[icon-before]:before {
  margin-right: var(--size--1);
}

.button[data-icon-after]:after,
.button[icon-after]:after {
  margin-left: var(--size--1);
}

.button[data-icon-before]:empty:before,
.button[icon-before]:empty:before {
  margin-right: 0;
}

.button[data-icon-after]:empty:after,
.button[icon-after]:empty:after {
  margin-left: 0;
}

.button[data-icon-before]:empty,
.button[icon-before]:empty,
.button[data-icon-after]:empty,
.button[icon-after]:empty {
  padding: var(--_button-padding-v) var(--_button-padding-v);
}

.button[data-visual="primary"][data-icon-before]:before,
.button[visual="primary"][icon-before]:before,
.button[data-visual="primary"][data-icon-after]:after,
.button[visual="primary"][icon-after]:after {
  --_button-icon-color: var(--white-color);
}

.button.icon {
  font-size: 1.75rem;
  padding: var(--space-s);
  border: 0;
  border-radius: 0;
}

.mega-button.button {
  background-color: var(--accent-color);
  padding: var(--space-xl);
  border-radius: 50%;
  color: var(--white-color);
  border: 16px solid var(--accent-tint-10);
  box-shadow: 0 0 8px var(--accent-color-10);
}

.button.mega-button:before {
  font-size: 8rem;
}

.button[data-icon][data-full-width="true"],
.button[data-icon-before][data-full-width="true"],
.button[data-icon-after][data-full-width="true"] {
  gap: var(--size-1);
}
